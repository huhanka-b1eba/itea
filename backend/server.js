import express from "express";
import cors from "cors";
import nodemailer from "nodemailer";
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
const corsOptions = {
    origin: [
        'http://iteadev.ru',
        'https://iteadev.ru',
        'http://localhost:3001'
    ],
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization']
};
app.use(cors(corsOptions));
app.use(express.json());

// –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–æ–≤
app.options('/*', cors(corsOptions));

// –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(express.static(path.join(__dirname, "../public")));

const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
    },
});

app.post("/send", async (req, res) => {
    const { name, email, message } = req.body;
    
    console.log(`[${new Date().toISOString()}] üìß –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞:`, {
        name,
        email,
        messageLength: message?.length || 0,
        userAgent: req.get('User-Agent'),
        origin: req.get('Origin')
    });

    try {
        await transporter.sendMail({
            from: `"–ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞" <${process.env.EMAIL_USER}>`,
            to: process.env.EMAIL_TO,
            subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${name}`,
            html: `
                <p><b>–ò–º—è:</b> ${name}</p>
                <p><b>Email:</b> ${email}</p>
                <p><b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b><br>${message}</p>
            `,
        });

        console.log(`[${new Date().toISOString()}] ‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è ${name}`);
        res.status(200).json({ success: true });
    } catch (error) {
        console.error(`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞ –¥–ª—è ${name}:`, error.message);
        res.status(500).json({ success: false, error: error.message });
    }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è SPA (–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
app.use((req, res) => {
    res.sendFile(path.join(__dirname, "../public/index.html"));
});

const PORT = process.env.PORT || 3001;
app.listen(PORT, () => console.log(`‚úÖ Server started on port ${PORT}`));
